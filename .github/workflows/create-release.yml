name: "release"

on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    name: "Release"
    runs-on: "ubuntu-latest"
    permissions:
      contents: "write"
      packages: "write"
    steps:
      - name: Get Version
        id: get_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}
          echo ::set-output name=VERSION2::${GITHUB_REF#refs/*/v}
        shell: bash

      - name: Version
        run: |
          echo Version: $VERSION
          echo Version2: $VERSION2

      - name: Check out repository code
        uses: actions/checkout@v3

      # - name: get version
      #   id: version
      #   uses: notiz-dev/github-action-json-property@release
      #   with: 
      #       path: 'module.json'
      #       prop_path: 'version'
      # - run: echo ${{steps.version.outputs.prop}} 

      - name: Update module.json
        run: |
          sed -i '/"version":/c\    "version": "${{ steps.get_version.outputs.VERSION2 }}",' module.json
          sed -i '/"download":/c\   "download": "https://github.com/maxostarr/xp-tracker/releases/download/${{ steps.get_version.outputs.VERSION }}/release-${{steps.get_version.outputs.VERSION}}.zip",' module.json
          cat module.json


      - name: "Create Zip"
        run: |
          zip -r release-${{steps.get_version.outputs.VERSION}}.zip . -x ./.git/**\* ./.github/**\*

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          # automatic_release_tag: "${{steps.version.outputs.prop}}"
          prerelease: false
          title: "Release ${{ steps.get_version.outputs.VERSION }}"
          files: |
            release-${{steps.get_version.outputs.VERSION}}.zip

      - name: Commit changes
        uses: EndBug/add-and-commit@v4
        with:
          author_name: Github Workflow
          message: "Deploy Release ${{ steps.get_version.outputs.VERSION }}"
          ref: 'main'
          add: module.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
